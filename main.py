import logging
import asyncio
from aiogram import types
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, Message, BotCommand, FSInputFile, URLInputFile, BufferedInputFile
from config_reader import config
from aiogram.filters import Command
from aiogram.utils.media_group import MediaGroupBuilder

bot = Bot(token=config.bot_token.get_secret_value())
dp = Dispatcher()

logging.basicConfig(level=logging.INFO)

big_button_1 = InlineKeyboardButton(
    text='–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã ‚úÖ',
    callback_data='big_button_1_pressed'
)

big_button_2 = InlineKeyboardButton(
    text='–ê–∫—Ü–∏–∏',
    callback_data='big_button_2_pressed'
)

big_button_3 = InlineKeyboardButton(
    text='–®–∫–æ–ª–∞ –±–∞—Ä–º–µ–Ω–æ–≤',
    callback_data='big_button_3_pressed'
)

back_button = types.InlineKeyboardButton(
    text='–ù–∞–∑–∞–¥',
    callback_data='back_button_pressed'
)

keyboard = InlineKeyboardMarkup(
    inline_keyboard=[[big_button_1],
                     [big_button_2],
                     [big_button_3]])

keyboard_opt = InlineKeyboardMarkup(
    inline_keyboard=[[back_button]])


url_button_1 = InlineKeyboardButton(
    text='–í–∫–æ–Ω—Ç–∞–∫—Ç–µ',
    url='https://vk.com/vlastbar'
)

url_button_2 = InlineKeyboardButton(
    text='–¢–µ–ª–µ–≥—Ä–∞–º',
    url='https://web.telegram.org/a/#1368428868'
)

keyboard1 = InlineKeyboardMarkup(
    inline_keyboard=[[url_button_1]]
)

keyboard2 = InlineKeyboardMarkup(
    inline_keyboard=[[url_button_2]]
)
@dp.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(
        text='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è —é–Ω—ã–π –ø–æ–¥–∞–≤–∞–Ω\n'
             '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏\n'
             '–î–∞ –ø—Ä–∏–±—É–¥–µ—Ç —Å —Ç–æ–±–æ–π —Å–∏–ª–∞!\n\n',
        reply_markup=keyboard
    )

@dp.message(Command("album"))
async def cmd_album(message: Message):
    album_builder = MediaGroupBuilder(
        caption="–ê—Ñ–∏—à–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π üìÜ"
    )
    album_builder.add_photo(
        media="https://i.ibb.co/Fs73STN/2.jpg"
    )
    album_builder.add_photo(
        media="https://i.ibb.co/v46fYry/1.jpg"
    )
    await message.answer_media_group(
        media=album_builder.build()
    )

@dp.callback_query(F.data == 'big_button_1_pressed')
async def process_button_1_press(callback: CallbackQuery):
    keyboard_opt = types.InlineKeyboardMarkup()
    keyboard_opt.add(back_button)
    if callback.message.text != '–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:':
        await callback.message.edit_text(
            text='–°–µ–≥–æ–¥–Ω—è –∑–∞–≤–µ–¥–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–æ 00:00',
            reply_markup=callback.message.reply_markup)
    await callback.answer(
        text='–°–µ–≥–æ–¥–Ω—è –Ω–∞ —Å–º–µ–Ω–µ: –ò–≤–∞–Ω. –¢–∞–∫ —á—Ç–æ –±–µ–≥–æ–º –≤ –±–∞—Ä!',
        show_alert=True
    )

@dp.callback_query(lambda c: c.data == 'back_button_pressed')
async def process_back_button_press(callback: CallbackQuery):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(big_button_1)
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

@dp.callback_query(F.data == 'big_button_2_pressed')
async def process_button_2_press(callback: CallbackQuery):
    if callback.message.text != '–ê–∫—Ü–∏–∏':
        await callback.message.edit_text(
            text='–ê–∫—Ü–∏–∏',
            reply_markup=callback.message.reply_markup
        )
    await callback.answer(
        text='–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –Ω–∞—Å –Ω–µ –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –∞–∫—Ü–∏–π, '
             '–Ω–æ –º—ã –≤—Å–µ —Ä–∞–≤–Ω–æ —Å —Ä–∞–¥–æ—Å—Ç—å—é —Ç–µ–±—è –∂–¥–µ–º –≤ –Ω–∞—à–µ–º –±–∞—Ä–µ!',
        show_alert=True
    )


@dp.callback_query(F.data == 'big_button_3_pressed')
async def process_button_3_press(callback: CallbackQuery):
    if callback.message.text != '–®–∫–æ–ª–∞ –±–∞—Ä–º–µ–Ω–æ–≤':
        await callback.message.edit_text(
            text='üî•–ö—É—Ä—Å –±–∞—Ä–º–µ–Ω–∞ 2024üî•\n\n'
                 'ü§î–ü–æ–∫–∞ –≤—Å–µ –∏—â—É—Ç –±–∞—Ä–º–µ–Ω–æ–≤, –≤–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã —É—á–∏—Ç—å –∏ –Ω–∞–ø—Ä–∞–≤–ª—è—Ç—å, —è —Ä–µ—à–∏–ª —Å–Ω–æ–≤–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å‚ùóÔ∏è–ö–£–†–°‚ùóÔ∏è\n\n'
                 'üìå–ß—Ç–æ –±—É–¥–µ—Ç ?\n\n',
            reply_markup=types.InlineKeyboardMarkup(inline_keyboard=[
                [
                    types.InlineKeyboardButton(text="–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å", url="http://yourwebsite.com")
                ]
            ])
        )

    await callback.answer(
        text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ',
        show_alert=True
    )

async def set_main_menu(bot: Bot):

    main_menu_commands = [
        BotCommand(command='/start',
                   description='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'),
        BotCommand(command='/contacts',
                   description='–ú—ã –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö'),
        BotCommand(command='/album',
                   description='–ê—Ñ–∏—à–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π üìÜ'),
        BotCommand(command='/contacts1',
                   description='–ó–∞–∫–∞–∑–∞—Ç—å —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞')
    ]

    async def main():
        await bot.start_polling()
        await asyncio.sleep(3600)
        await bot.stop_polling()

    await bot.set_my_commands(main_menu_commands)

# @dp.message(Command("help"))
# @dp.message(CommandStart(
#     deep_link=True, magic=F.args == "help"
# ))
# async def cmd_start_help(message: Message):
#     await message.answer("–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n\n"
#                          "/start - –ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
#                          "/help - –°–ø—Ä–∞–≤–∫–∞ –±–æ—Ç–∞(–∫–æ–º–∞–Ω–¥—ã)\n"
#                          "/hello - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–æ—Ç–∞\n\n"
#                          "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≥—Ä—É–ø–ø—ã:\n\n"
#                          "/dice - –ë—Ä–æ—Å—Ç—å –∫—É–±–∏–∫\n"
#                          "/basketball - –ë—Ä–æ—Å–∏—Ç—å –±–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω—ã–π –º—è—á"
#                          )

@dp.message(Command("contacts"))
@dp.message(CommandStart(
    deep_link=True, magic=F.args == "contacts"
))
async def cmd_contacts(message: Message):
    await message.answer("–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—Å –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö\n\n"
                         "–≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç —Ä–∞–∑–≤–∏—Ç–∏—é –ø—Ä–æ–µ–∫—Ç–∞!\n\n"
                         )
    await message.answer(text='–ú—ã –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö',
        reply_markup=keyboard1)


@dp.message(Command("contacts1"))
@dp.message(CommandStart(
    deep_link=True, magic=F.args == "contacts1"
))
async def cmd_contacts1(message: Message):
    await message.answer("–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–≤—Ç–æ—Ä–æ–º\n\n"
                         "–≠—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç —Ä–∞–∑–≤–∏—Ç–∏—é –ø—Ä–æ–µ–∫—Ç–∞!\n\n"
                         )
    await message.answer(text='–ó–∞–∫–∞–∑–∞—Ç—å —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞',
        reply_markup=keyboard2)

@dp.message(F.animation)
async def echo_gif(message: Message):
    await message.reply_animation(message.animation.file_id)
    await message.answer("–ù–æ—Ä–º–∞–ª—å–Ω–æ —Ç—ã —Å—Ç–µ–ª–∏—à—å!")


if __name__ == '__main__':
    dp.startup.register(set_main_menu)
    dp.callback_query
    dp.run_polling(bot, allowed_updates=[])
